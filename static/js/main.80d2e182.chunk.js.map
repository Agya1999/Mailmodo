{"version":3,"sources":["Images/logo.svg","Components/Header/Header.jsx","Components/InfoTable/InfoTable.jsx","Images/destination.svg","Images/warehouse.svg","Components/Card/StatusCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["ButtonAppBar","className","AppBar","position","Toolbar","src","logo","alt","Typography","variant","href","IconButton","edge","color","aria-label","columns","id","label","minWidth","useStyles","makeStyles","root","width","container","maxHeight","StickyHeadTable","props","classes","useState","setTempData","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","align","style","TableBody","data","i","hover","role","tabIndex","onClick","awbno","filterData","filter","handlePass","carrier","from","to","pickup_date","substring","extra_fields","expected_delivery_date","current_status","StatusCard","handleFilter","param","tempData","state","x","current_status_code","setState","filteredData","OOD","DEX","DEL","INT","NFI","axios","post","email","headers","Authorization","then","console","log","orders","prevState","Fragment","val","Card","CardContent","Grid","item","xs","Destination","Warehouse","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80d2e182.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.60097ea2.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../../Images/logo.svg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\r\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\r\nimport './Header.css';\r\n\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n \r\n  return (\r\n    <div className=\"Container\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <img src ={logo} alt =\"logo\" className=\"Logo\"/>\r\n\r\n          <Typography variant=\"h6\" className=\"Brand\">\r\n            Intguine\r\n          </Typography>\r\n          <div className=\"HeaderItems\">\r\n          <Typography variant=\"h6\" className=\"items\" href=\"#\">\r\n            Home\r\n          </Typography>\r\n           <Typography variant=\"h6\" className=\"items\" href=\"#\">\r\n            Brand\r\n          </Typography>\r\n          <Typography variant=\"h6\" className=\"items\" >\r\n            Transporters\r\n          </Typography>\r\n\r\n          <IconButton edge=\"start\" className=\"usericon\" color=\"inherit\" aria-label=\"menu\">\r\n            < PersonOutlineTwoToneIcon/>\r\n            \r\n          </IconButton>\r\n          <IconButton edge=\"start\" className=\"usericon\" color=\"inherit\" aria-label=\"menu\">\r\n            < ExpandMoreTwoToneIcon/>\r\n            \r\n          </IconButton>\r\n\r\n          </div>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nconst columns = [\r\n  { id: \"AWB NUMBER\", label: \"AWB NUMBER\", minWidth: 100 },\r\n  { id: \"TRANSPORTER\", label: \"TRANSPORTER\", minWidth: 100 },\r\n  {\r\n    id: \"SOURCE\",\r\n    label: \"SOURCE\",\r\n    minWidth: 100,\r\n  },\r\n  {\r\n    id: \"DESTINATION\",\r\n    label: \"DESTINATION\",\r\n    minWidth: 10,\r\n  },\r\n  {\r\n    id: \"BRAND\",\r\n    label: \"BRAND\",\r\n    minWidth: 20,\r\n  },\r\n  {\r\n    id: \"START DATE\",\r\n    label: \"START DATE\",\r\n    minWidth: 100,\r\n  },\r\n  {\r\n    id: \"ETD\",\r\n    label: \"ETD\",\r\n    minWidth: 100,\r\n  },\r\n  {\r\n    id: \"STATUS\",\r\n    label: \"STATUS\",\r\n    minWidth: 10,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 500,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const classes = useStyles();\r\n\r\n  const [tempData, setTempData] = useState([]);\r\n  const handlePass = (awbno) => {\r\n    let filterData = props.data.filter((data) => {\r\n      return data.awbno === awbno;\r\n    });\r\n    setTempData(filterData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.data &&\r\n              props.data.map((data, i) => (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={i}\r\n                  onClick={() => {\r\n                    handlePass(data.awbno);\r\n                  }}\r\n                >\r\n                  <TableCell>#{data.awbno}</TableCell>\r\n                  <TableCell>{data.carrier}</TableCell>\r\n                  <TableCell>{data.from}</TableCell>\r\n                  <TableCell>{data.to}</TableCell>\r\n                  <TableCell>{data.carrier}</TableCell>\r\n                  <TableCell>\r\n                    {data.pickup_date && data.pickup_date.substring(0, 10)}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {data.extra_fields &&\r\n                      data.extra_fields.expected_delivery_date.substring(0, 10)}\r\n                  </TableCell>\r\n                  <TableCell>{data.current_status}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/destination.5336278d.svg\";","export default __webpack_public_path__ + \"static/media/warehouse.147c9c0b.svg\";","import React, { Component } from \"react\";\r\nimport { Card, CardContent, Typography, Grid, Paper } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"./StatusCard.css\";\r\nimport InfoTable from \"../InfoTable/InfoTable\";\r\nimport Destination from \"../../Images/destination.svg\";\r\nimport Warehouse from \"../../Images/warehouse.svg\";\r\nclass StatusCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      OOD: 0,\r\n      DEX: 0,\r\n      DEL: 0,\r\n      INT: 0,\r\n      NFI: 0,\r\n      data: [],\r\n      filteredData: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const body = {\r\n      email: \"naweliverma7@gmail.com\",\r\n    };\r\n    const config = {\r\n      headers: { Authorization: \"Bearer tTU3gFVUdP\" },\r\n    };\r\n    axios.post(\"https://f0ztti2nsk.execute-api.ap-south-1.amazonaws.com/v1/consignment/fetch\", body, config).then(({ data }) => {\r\n      console.log(data);\r\n      data.map((orders) => {\r\n        this.setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            [orders.current_status_code]:\r\n              prevState[orders.current_status_code] + 1,\r\n          };\r\n        });\r\n      });\r\n      this.setState({ data }, () => this.handleFilter(\"DEL\"));\r\n    });\r\n  }\r\n  handleFilter = (param) => {\r\n    let tempData = [];\r\n    tempData = this.state.data.filter((x) => {\r\n      return x.current_status_code === param;\r\n    });\r\n    this.setState({ filteredData: tempData });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"StatusCards\">\r\n          {[ \"DEL\", \"INT\",\"OOD\", \"DEX\", \"NFI\"].map((val) => {\r\n            return (\r\n              <Card\r\n                className=\"StatusList\"\r\n                onClick={() => this.handleFilter(val)}\r\n              >\r\n                <CardContent>\r\n                  <Typography className=\"Status_TYPE\">{val}</Typography>\r\n                  <Typography className=\"Status_COUNT\">\r\n                    {this.state[val]}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            );\r\n          })}\r\n        </div>\r\n        <Grid container>\r\n          <Grid item xs={3}>\r\n            <Paper>\r\n              <img src={Destination} alt=\"FliprBrand\" className=\"DestinationLogo\"/>\r\n\r\n                \r\n              <img src={Warehouse} alt=\"FliprBrand\" className=\"Warehouse\" />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            {\" \"}\r\n            <InfoTable data={this.state.filteredData} />\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatusCard;\r\n","import React from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport StatusCard from \"./Components/Card/StatusCard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <StatusCard />\n      {/* <TimelineCard/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}