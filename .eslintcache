[{"C:\\Users\\user\\Desktop\\mailmodo\\src\\reportWebVitals.js":"1","C:\\Users\\user\\Desktop\\mailmodo\\src\\App.js":"2","C:\\Users\\user\\Desktop\\mailmodo\\src\\Components\\Header\\Header.jsx":"3","C:\\Users\\user\\Desktop\\mailmodo\\src\\index.js":"4","C:\\Users\\user\\Desktop\\mailmodo\\src\\Components\\Card\\StatusCard.jsx":"5","C:\\Users\\user\\Desktop\\mailmodo\\src\\Components\\InfoTable\\InfoTable.jsx":"6"},{"size":362,"mtime":1609435463410,"results":"7","hashOfConfig":"8"},{"size":293,"mtime":1609622994066,"results":"9","hashOfConfig":"8"},{"size":1630,"mtime":1609619979011,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1609435463410,"results":"11","hashOfConfig":"8"},{"size":3657,"mtime":1609653319348,"results":"12","hashOfConfig":"8"},{"size":3207,"mtime":1609619146056,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"15vz0ga",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\user\\Desktop\\mailmodo\\src\\reportWebVitals.js",[],["31","32"],"C:\\Users\\user\\Desktop\\mailmodo\\src\\App.js",[],["33","34"],"C:\\Users\\user\\Desktop\\mailmodo\\src\\Components\\Header\\Header.jsx",["35"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../../Images/logo.svg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonOutlineTwoToneIcon from '@material-ui/icons/PersonOutlineTwoTone';\r\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\r\nimport './Header.css';\r\n\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n \r\n  return (\r\n    <div className=\"Container\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <img src ={logo} alt =\"logo\" className=\"Logo\"/>\r\n\r\n          <Typography variant=\"h6\" className=\"Brand\">\r\n            Intguine\r\n          </Typography>\r\n          <div className=\"HeaderItems\">\r\n          <Typography variant=\"h6\" className=\"items\" href=\"#\">\r\n            Home\r\n          </Typography>\r\n           <Typography variant=\"h6\" className=\"items\" href=\"#\">\r\n            Brand\r\n          </Typography>\r\n          <Typography variant=\"h6\" className=\"items\" >\r\n            Transporters\r\n          </Typography>\r\n\r\n          <IconButton edge=\"start\" className=\"usericon\" color=\"inherit\" aria-label=\"menu\">\r\n            < PersonOutlineTwoToneIcon/>\r\n            \r\n          </IconButton>\r\n          <IconButton edge=\"start\" className=\"usericon\" color=\"inherit\" aria-label=\"menu\">\r\n            < ExpandMoreTwoToneIcon/>\r\n            \r\n          </IconButton>\r\n\r\n          </div>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\Desktop\\mailmodo\\src\\index.js",[],["36","37"],"C:\\Users\\user\\Desktop\\mailmodo\\src\\Components\\Card\\StatusCard.jsx",["38"],"C:\\Users\\user\\Desktop\\mailmodo\\src\\Components\\InfoTable\\InfoTable.jsx",["39"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nconst columns = [\r\n  { id: \"AWB NUMBER\", label: \"AWB NUMBER\", minWidth: 100 },\r\n  { id: \"TRANSPORTER\", label: \"TRANSPORTER\", minWidth: 100 },\r\n  {\r\n    id: \"SOURCE\",\r\n    label: \"SOURCE\",\r\n    minWidth: 100,\r\n  },\r\n  {\r\n    id: \"DESTINATION\",\r\n    label: \"DESTINATION\",\r\n    minWidth: 10,\r\n  },\r\n  {\r\n    id: \"BRAND\",\r\n    label: \"BRAND\",\r\n    minWidth: 20,\r\n  },\r\n  {\r\n    id: \"START DATE\",\r\n    label: \"START DATE\",\r\n    minWidth: 100,\r\n  },\r\n  {\r\n    id: \"ETD\",\r\n    label: \"ETD\",\r\n    minWidth: 100,\r\n  },\r\n  {\r\n    id: \"STATUS\",\r\n    label: \"STATUS\",\r\n    minWidth: 10,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 500,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const classes = useStyles();\r\n\r\n  const [tempData, setTempData] = useState([]);\r\n  const handlePass = (awbno) => {\r\n    let filterData = props.data.filter((data) => {\r\n      return data.awbno === awbno;\r\n    });\r\n    setTempData(filterData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.data &&\r\n              props.data.map((data, i) => (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={i}\r\n                  onClick={() => {\r\n                    handlePass(data.awbno);\r\n                  }}\r\n                >\r\n                  <TableCell>#{data.awbno}</TableCell>\r\n                  <TableCell>{data.carrier}</TableCell>\r\n                  <TableCell>{data.from}</TableCell>\r\n                  <TableCell>{data.to}</TableCell>\r\n                  <TableCell>{data.carrier}</TableCell>\r\n                  <TableCell>\r\n                    {data.pickup_date && data.pickup_date.substring(0, 10)}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {data.extra_fields &&\r\n                      data.extra_fields.expected_delivery_date.substring(0, 10)}\r\n                  </TableCell>\r\n                  <TableCell>{data.current_status}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n}",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":20},{"ruleId":"40","replacedBy":"50"},{"ruleId":"42","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":30,"column":25,"nodeType":"54","messageId":"55","endLine":30,"endColumn":27},{"ruleId":"46","severity":1,"message":"56","line":57,"column":10,"nodeType":"48","messageId":"49","endLine":57,"endColumn":18},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar",["57"],["58"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'tempData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]